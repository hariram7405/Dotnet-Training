
# SupportPortal

SupportPortal is a C# console application designed to simulate a basic support ticketing system. This system manages **Support Agents** and **Support Requests**, where agents are assigned specific issues, can mark requests as resolved, and reassign requests to different agents.

## Project Overview

The **SupportPortal** system is used by support teams to manage requests submitted by users. It allows for efficient assignment of agents to issues, tracking of request statuses, and supports reassigning requests between agents when needed. The system also tracks when a request is marked as resolved and displays the request details.

## Features

- **Create and Manage Support Agents**: You can create agents with specific departments (e.g., IT, Networking) and display their details.
- **Create and Track Support Requests**: You can create requests by specifying the issue description, status, resolution time, and the agent assigned.
- **Mark Requests as Resolved**: You can update a request's status to "Resolved" once the issue has been fixed.
- **Reassign Requests**: Requests can be reassigned from one agent to another.
- **Display Support Request Summary**: View detailed summaries of each request, including the issue, status, resolution time, and assigned agent.

## Classes Overview

### **SupportAgent**
- **Description**: Represents a support agent in the system, including agent details such as ID, name, and department.
- **Methods**:
  - `DisplayAgent()`: Displays the agent's details, including their ID, name, and department.

### **SupportRequest**
- **Description**: Represents a support request that contains information about the issue, its status, and which agent is handling it.
- **Methods**:
  - `MarkResolved()`: Marks the request as resolved and updates the status to "Resolved".
  - `Reassign(SupportAgent newAgent)`: Reassigns the request to a new agent.
  - `DisplaySummary()`: Displays the request's details, such as the issue, status, creation date, resolution time, and assigned agent.

## Code

### Program.cs

```csharp
using System;
using SupportPortal.Models;

namespace SupportPortal
{
    class Program
    {
        static void Main(string[] args)
        {
            // Create agents
            var agent1 = new SupportAgent(1, "Anu", "IT");
            var agent2 = new SupportAgent(2, "Babu", "Networking");

            // Display agents
            Console.WriteLine("Support Agents:");
            agent1.DisplayAgent();
            agent2.DisplayAgent();

            // Create requests
            var request1 = new SupportRequest(101, "Cannot access Firewall", "Open", DateTime.Now, 4.5, agent1);
            var request2 = new SupportRequest(102, "Outlook and email not syncing", "Open", DateTime.Now, 3, agent2);

            // Display initial summaries
            Console.WriteLine("\nInitial Support Requests:");
            request1.DisplaySummary();
            request2.DisplaySummary();

            // Mark requests as resolved
            request1.MarkResolved();
            request2.MarkResolved();

            // Reassign requests
            request1.Reassign(agent2);
            request2.Reassign(agent1);

            // Display updated summaries
            Console.WriteLine("\nUpdated Support Requests:");
            request1.DisplaySummary();
            request2.DisplaySummary();
        }
    }
}
````

### SupportAgent.cs

```csharp
namespace SupportPortal.Models
{
    public class SupportAgent
    {
        public int AgentId { get; set; }
        public string Name { get; set; }
        public string Department { get; set; }

        public SupportAgent(int agentId, string name, string department)
        {
            AgentId = agentId;
            Name = name;
            Department = department;
        }

        public void DisplayAgent()
        {
            Console.WriteLine($"Agent ID: {AgentId}, Name: {Name}, Department: {Department}");
        }
    }
}
```

### SupportRequest.cs

```csharp
using System;

namespace SupportPortal.Models
{
    public class SupportRequest
    {
        public int RequestId { get; set; }
        public string Issue { get; set; }
        public string Status { get; set; }
        public DateTime CreatedOn { get; set; }
        public double ResolutionTimeInHours { get; set; }
        public bool IsResolved { get; set; }
        public SupportAgent AssignedTo { get; set; }

        public SupportRequest(int requestId, string issue, string status, DateTime createdOn, double resolutionTimeInHours, SupportAgent assignedTo)
        {
            RequestId = requestId;
            Issue = issue;
            Status = status;
            CreatedOn = createdOn;
            ResolutionTimeInHours = resolutionTimeInHours;
            AssignedTo = assignedTo;
            IsResolved = false;
        }

        public void MarkResolved()
        {
            IsResolved = true;
            Status = "Resolved";
        }

        public void Reassign(SupportAgent newAgent)
        {
            AssignedTo = newAgent;
        }

        public void DisplaySummary()
        {
            Console.WriteLine($"\nRequest ID: {RequestId}");
            Console.WriteLine($"Issue: {Issue}");
            Console.WriteLine($"Status: {Status}");
            Console.WriteLine($"Created On: {CreatedOn}");
            Console.WriteLine($"Resolution Time (hrs): {ResolutionTimeInHours}");
            Console.WriteLine($"Is Resolved: {IsResolved}");
            Console.WriteLine($"Assigned To: {AssignedTo.Name} (ID: {AssignedTo.AgentId})");
        }
    }
}
```

## Sample Output

When you run the application, the output will be displayed in the console as shown below:

```
Support Agents:
Agent ID: 1, Name: Anu, Department: IT
Agent ID: 2, Name: Babu, Department: Networking

Initial Support Requests:

Request ID: 101
Issue: Cannot access Firewall
Status: Open
Created On: [current date and time]
Resolution Time (hrs): 4.5
Is Resolved: False
Assigned To: Anu (ID: 1)

Request ID: 102
Issue: Outlook and email not syncing
Status: Open
Created On: [current date and time]
Resolution Time (hrs): 3
Is Resolved: False
Assigned To: Babu (ID: 2)

Request ID: 101 has been marked as resolved.
Request ID: 102 has been marked as resolved.

Updated Support Requests:

Request ID: 101
Issue: Cannot access Firewall
Status: Resolved
Created On: [current date and time]
Resolution Time (hrs): 4.5
Is Resolved: True
Assigned To: Babu (ID: 2)

Request ID: 102
Issue: Outlook and email not syncing
Status: Resolved
Created On: [current date and time]
Resolution Time (hrs): 3
Is Resolved: True
Assigned To: Anu (ID: 1)
```

* GitHub: (https://github.com/hariram7405/Dotnet-Training/tree/main/Day1/Day1Project2)
